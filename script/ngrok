#!/bin/ash /etc/rc.common

START=95
STOP=
SERVICE_USE_PID=1
SERVICE_WRITE_PID=1
SERVICE_DAEMONIZE=1

MPATH=`uci get monlor.tools.mpath`
. $MPATH/script/mecho

BIN=$MPATH/bin/ngrok
LOG=$MPATH/log/ngrok.log
CONF=$MPATH/conf/ngrok.conf
BAK=$MPATH/backup
appname=ngrok

get_config () {

	local cmdstr=""
	[ `uci show monlor.$appname | grep ser_host | wc -l` -eq 0 ] && uci set monlor.$appname.ser_host=server.ngrok.cc
	[ `uci show monlor.$appname | grep ser_port | wc -l` -eq 0 ] && uci set monlor.$appname.ser_port=4443
	[ `uci show monlor.$appname | grep ser_token | wc -l` -eq 0 ] && uci set monlor.$appname.ser_token=" "
	ser_host=`uci get monlor.$appname.ser_host`
	ser_port=`uci get monlor.$appname.ser_port`
	ser_token=`uci get monlor.$appname.ser_token`
	while read line
	do 
		[[ ${line:0:1} == "#" ]] && continue 
		type=`echo $line | awk -F ',' '{print$2}'`
		lhost=`echo $line | awk -F ',' '{print$3}'`
		lport=`echo $line | awk -F ',' '{print$4}'`
		rport=`echo $line | awk -F ',' '{print$5}'`
		domain=`echo $line | awk -F ',' '{print$6}'`
		if [ "$type" == "tcp" ]; then
			cmdstr="$cmdstr -AddTun[Type:$type,Lhost:$lhost,Lport:$lport,Rport:$rport]"
		else
			if [ `echo $domain | grep "\." | wc -l` -ne 0 ]; then
				cmdstr="$cmdstr -AddTun[Type:$type,Lhost:$lhost,Lport:$lport,Hostname:$domain]" 
			else
				cmdstr="$cmdstr -AddTun[Type:$type,Lhost:$lhost,Lport:$lport,Sdname:$domain]" 
			fi
		fi
	done < $CONF
	[ -z "$cmdstr" ] || cmdstr="$BIN -SER[Shost:$ser_host,Sport:$ser_port,Password:$ser_token]$cmdstr"
	echo $cmdstr
	
} 

start () {

	[ ! -x $BIN ] && MEO -red1t "Ngrok not installed" && exit
	uci set monlor.$appname.enable=1
	uci commit monlor
	ps | grep ngrok | grep -v grep | grep -v {ngrok} > /dev/null 2>&1
	if [ $? -eq 0 ]; then                                                              
		MEO -pur1t 'Ngrok is already running'                                            
		exit 1
	fi
	MEO -bla1t 'Starting $appname .... \c'
	#update
	uci set monlor.$appname.version=`$BIN | awk -F "v|-" '/ngrokc/{print$2}'`        
	runstr=`get_config`
	echo $runstr > /tmp/runstr
	uci commit monlor
	echo `date` > $LOG	
	service_start $runstr
	if [ $? -eq 0 ]; then
                MEO -gre1 "Done!"
        else
                MEO -red1 'Failed!'
        fi

}

stop () {

	[ ! -x $BIN ] && MEO -red1t "Ngrok not installed" && exit
	uci set monlor.$appname.enable=0
	uci commit monlor
	MEO -bla1t 'Stopping $appname .... \c'
	service_stop $BIN
	kill -9 $(ps | grep $BIN | grep -v grep | grep -v {ngrok} | awk '{print $1}') > /dev/null 2>&1
	MEO -gre1 "Done!"

}

restart () {

	stop
	sleep 2
	start

}

enable() {

	$MPATH/script/update $appname

}

disable() {

	uci set monlor.$appname.enable=0
	uci commit monlor
	stop
	MEO -bla1t "Delete $appname files ... \c"
	rm -rf $BIN $CONF
	MEO -gre1 "Done!"

}
